// Code generated by hertz generator.

package DouyinCore

import (
	"context"

	"dy/biz/util"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

func rootMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _method1Mw() []app.HandlerFunc {
	// your code...
	return nil
}

func _userloginMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _userMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _userinfoMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _userregisterMw() []app.HandlerFunc {
	// your code...
	return nil
}
func _douyinMw() []app.HandlerFunc {
	// your code...
	return nil
}
func _videoFeedMv() []app.HandlerFunc {
	// your code...
	return nil
}
func _publishMw() []app.HandlerFunc {
	// your code...
	return nil
}
func _publishListMw() []app.HandlerFunc {
	// your code...
	return nil
}
func _dyfavMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _dyFavList() []app.HandlerFunc {
	// your code...
	return nil
}
func _dyCommMw() []app.HandlerFunc {
	// your code...
	return nil
}
func _checkLoginMw() []app.HandlerFunc {
	return []app.HandlerFunc{func(ctx context.Context, c *app.RequestContext) {
		var req Request
		c.BindAndValidate(&req)
		resp := new(Response)
		// if err != nil {
		// 	resp.StatusCode = 10
		// 	resp.StatusMsg = "请您先登录"
		// 	c.JSON(consts.StatusOK, resp)
		// 	return
		// }
		t := req.Token
		mc, err2 := util.ParseToken(t)
		if err2 != nil || mc == nil {
			resp.StatusCode = 10
			resp.StatusMsg = "请您先登录"
			c.JSON(consts.StatusOK, resp)
			c.Abort()
		}
		c.Next(ctx)

	}}
}

type Request struct {
	Token string `json:"token" query:"token" form:"token"`
}
type Response struct {
	StatusCode int32  `json:"status_code" form:"status_code" query:"status_code"`
	StatusMsg  string `json:"status_msg " form:"status_msg" query:"status_msg"`
}
